// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "cmd+r",
        "command": "code-runner.run",
        "when": "editorTextFocus && editorLangId != 'markdown'"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-code-runner.run"
    },
    {
        "key": "alt+m",
        "command": "markdown.showPreviewToSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "cmd+left",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "cmd+right",
        "command": "workbench.action.positionPanelRight"
    },
    {
        "key": "cmd-right",
        "command": "workbench.action.togglePanel",
        "when" : "activePanel != '' && panelPosition == 'right'"
    },
    {
        "key": "cmd+down",
        "command": "workbench.action.positionPanelBottom"
    },
    {
        "key": "cmd-down",
        "command": "workbench.action.togglePanel",
        "when" : "activePanel != '' && panelPosition == 'bottom'"
    },

    {
        "key": "alt+cmd+p",
        "command": "workbench.action.problems.focus"
    },
    {
        "key": "alt+cmd+o",
        "command": "workbench.panel.output.focus"
    },
    {
        "key": "alt+cmd+s",
        "command": "workbench.view.search",
        "when": "!searchViewletVisible"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.view.search",
        "when": "!searchViewletVisible"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.showAllEditors"
    },
    {
        "key": "alt+cmd+tab",
        "command": "-workbench.action.showAllEditors"
    },
    {
        "key": "alt+tab",
        "command": "workbench.action.switchWindow"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.switchWindow"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "alt+cmd+t",
        "command": "workbench.action.terminal.focusNext"
    },
    {
        "key": "cmd+b",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "cmd+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "alt+cmd+e",
        "command": "editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+i",
        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+h",
        "command": "addCursorsAtSearchResults",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "shift+cmd+l",
        "command": "-addCursorsAtSearchResults",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "shift+alt+r",
        "command": "editor.action.refactor",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-editor.action.refactor",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+s",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+cmd+down",
        "command": "-notebook.cell.focusInOutput",
        "when": "notebookCellHasOutputs && notebookEditorFocused && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+cmd+down",
        "command": "-workbench.action.terminal.resizePaneDown",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+g",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "f3",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+cmd+down",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+cmd+down",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "enter",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "ctrl+cmd+up",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+cmd+up",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "shift+f3",
        "command": "-editor.action.previousMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+up",
        "command": "cursorPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "pageup",
        "command": "-cursorPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+down",
        "command": "cursorPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "pagedown",
        "command": "-cursorPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "cursorPageDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+pagedown",
        "command": "-cursorPageDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+up",
        "command": "cursorPageUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+pageup",
        "command": "-cursorPageUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+u",
        "command": "deleteAllLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+backspace",
        "command": "-deleteAllLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+delete",
        "command": "-deleteAllRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+up",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+cmd+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+down",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+cmd+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+\\",
        "command": "workbench.action.toggleZenMode"
    },
    {
        "key": "cmd+k z",
        "command": "-workbench.action.toggleZenMode"
    },
    {
        "key": "cmd+enter",
        "command": "refactorPreview.apply",
        "when": "refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview'"
    },
    {
        "key": "shift+enter",
        "command": "-refactorPreview.apply",
        "when": "refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview'"
    },
    {
        "key": "ctrl+d",
        "command": "-deleteRight",
        "when": "textInputFocus"
    },
    {
        "key": "alt+f12",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+alt+d",
        "command": "-extension.downloadSettings"
    },
    {
        "key": "shift+enter+d",
        "command": "editor.action.goToTypeDefinition"
    },
    {
        "key": "shift+alt+d",
        "command": "editor.action.peekDefinition"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+k f12",
        "command": "-editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+l",
        "command": "multiCommand.selectLine"
    },
    {
        "key": "ctrl+shift+p",
        "command": "editor.action.revealDefinition"
    },
    {
        "key": "ctrl+,",
        "command": "editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+,",
        "command": "-editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.navigateForward",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.navigateBack",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.navigateBack"
    }
]
